package com.CPT.Servlet;

import java.io.IOException;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import java.util.Properties;
import java.util.Random;

import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet("/reset_password")
public class ResetPasswordServlet extends HttpServlet{

	
	private static final long serialVersionUID = 1L;

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String email = req.getParameter("txtemail");
		RequestDispatcher dispatcher = null;
		int maotp = 0;
		HttpSession mysession = req.getSession();
		
		if(email != null || !email.equals("")) {
			Random random = new  Random();
			maotp = random.nextInt();
			
			String to = email;
			Properties properties = new Properties();
	        properties.put("mail.smtp.host", "smtp.gmail.com");
	        properties.put("mail.smtp.socketFactory.port", "465");
	        properties.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
	        properties.put("mail.smtp.auth", "true");
	        properties.put("mail.smtp.port", "465");
	        
	        Session session = Session.getDefaultInstance(properties, new javax.mail.Authenticator() {
	        	protected PasswordAuthentication getPasswordAuthentication() {
	        		return new PasswordAuthentication("apihacking465@gmail.com", "nwmhpeqeokscgdnb");
	        	}
	        });
	        try {
				MimeMessage message = new MimeMessage(session);
				message.setFrom(new InternetAddress(email));
				message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
				message.setSubject("Cụ Đào Văn Hùng");
				message.setText("Mã OTP của bạn là: " + maotp );
				Transport.send(message);
			} catch (MessagingException e) {
				throw new RuntimeException(e);
			}
	        dispatcher = req.getRequestDispatcher("OTP.jsp");
	        req.setAttribute("message", "Mã OTP đã được gửi đến gmail của bạn");
	        mysession.setAttribute("otp", maotp);
	        mysession.setAttribute("email", email);
	        dispatcher.forward(req, resp);
		}
	}
	
}
